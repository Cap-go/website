---
import BlogListing from '@/components/BlogListing.astro'
import type { GetStaticPaths } from 'astro'
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'
import { slug as slugify } from 'github-slugger'

export const getStaticPaths: GetStaticPaths = async () => {
  const publishedPosts = await getCollection('blog', ({ data }) => data.published !== false)
  const tags: { [k: string]: CollectionEntry<'blog'>[] } = {}
  publishedPosts.forEach((article) =>
    article.data.tag.split(',').forEach((props) => {
      if (!tags[props]) tags[props] = []
      tags[props].push(article)
    }),
  )
  return Object.entries(tags).map(([slug, posts]) => ({ params: { slug: slugify(slug) }, props: { posts } }))
}

const allPosts = Astro.props.posts as CollectionEntry<'blog'>[]
---

<BlogListing {allPosts} />
